{"version":3,"sources":["./src/environments/environment.ts","./src/app/characters/characters.component.ts","./src/app/characters/characters.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/characters/character/character.component.ts","./src/app/characters/character/character.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/characters/character/shared/characters-api.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { CharactersApiService } from './character/shared/characters-api.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n\n\n@Component({\n  selector: 'app-characters',\n  templateUrl: './characters.component.html',\n  styleUrls: ['./characters.component.css']\n})\n\nexport class CharactersComponent implements OnInit {\n\n  // constructor;tipo;nombre_variable;componente_a_llamar\n  constructor(private characterSvc: CharactersApiService) { }\n\n  // se crea una propiedad y se leasigna el componente observable tipo any\n  allCharacters: Observable<any>;\n\n\n\n   ngOnInit(): void {\n     //invocamos almetodo en nuesta Metodo ngOnInit\n    this.getCharacters();\n  }\n\n\n  //creamos el Metodo getCharacters para poder relacionarlo con getAllCharacters y asi traer todos //characters\n  getCharacters() {\n  //Nota se podria decltar directamente en ngOnInit\n    this.allCharacters = this.characterSvc.getAllCharacters();\n  }\n\n}\n","<div fxFlex fxLayout=\"column\">\n  <div fxLayout=\"row wrap\">\n    <div fxFlex=\"25\" fxFlex.md=\"33\" fxFlex.sm=\"50\" fxFlex.xs=\"100\" fxLayout=\"column\"\n    *ngFor=\"let character of allCharacters | async\" style =padding:5px;>\n    <app-character [character]=\"character\"></app-character>\n  </div>\n  </div>\n</div>\n\n\n<!--\n<p *ngFor=\"let character of allCharacters | async\">\n  {{this.character | json }}\n  characters works!\n</p> -->\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Marvelapi';\n}\n","<app-navbar></app-navbar>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavbarComponent } from './navbar/navbar.component';\n//import { LayoutModule } from '@angular/cdk/layout';error conflicto con componente FlexLayoutModule\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatCardModule} from '@angular/material/card';\nimport {MatFormFieldModule} from '@angular/material/form-field';\n\n\n\n\nimport { CharacterComponent } from './characters/character/character.component';\nimport { CharactersComponent } from './characters/characters.component';\n\n\nimport { HttpClientModule } from '@angular/common/http';\n//https://github.com/angular-university/angular-http-guide\n\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { from } from 'rxjs';\n// Angular Flex Layout provides a sophisticated layout API using Flexbox CSS + mediaQuery. This module provides Angular developers with component layout features using a custom Layout API, mediaQuery observables, and injected DOM flexbox-2016 CSS stylings.\n\n//https://github.com/angular/flex-layout\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    CharacterComponent,\n    CharactersComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    HttpClientModule,\n    FlexLayoutModule,\n    MatCardModule,\n    MatFormFieldModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\n\n\n@Component({\n  selector: 'app-character',\n  templateUrl: './character.component.html',\n  styleUrls: ['./character.component.css']\n})\nexport class CharacterComponent implements OnInit {\n\n  @Input()character:any;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card>\n  <img mat-card-image src=\"{{character.thumbnail.path}}.{{character.thumbnail.extension}}\" alt=\"{{character.name}}\">\n\n<mat-card-title>\n  {{character.name}}\n</mat-card-title>\n<mat-card-footer>\n  <a href=\"{{character.urls[0].url}}\" target=\"_blank\"  fxFlex mat-flat-button color=\"primary\">\n    Details\n  </a>\n</mat-card-footer>\n</mat-card>\n","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n      [opened]=\"(isHandset$ | async) === false\">\n    <mat-toolbar color=\"secondary\">Menu</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item href=\"#\">Link 1</a>\n      <a mat-list-item href=\"#\">Link 2</a>\n      <a mat-list-item href=\"#\">Link 3</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span>Marvelapi</span>\n    </mat-toolbar>\n    <!-- Add Content Here -->\n    <router-outlet></router-outlet>\n    <!-- salida de la directiva -->\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CharactersApiService {\n  //api key ya que la app es de uso privado\n  PUBLIC_KEY = 'c8a60a7272613a2655b9b640dd7ae314';\n  //hash : un resumen md5 del parámetro ts, su clave privada y su clave pública por ejemplo, md5 ts + privateKey + publicKey//hay pagina para generaelos\n  HASH = '8a3a9c5d37d916238c8bd9174371a291';\n  //en URL_API solicitamos la app(servicio) a solicitar y en este caso autenticamos con publi_key\n  URL_API = `https://gateway.marvel.com:443/v1/public/characters?apikey=${this.PUBLIC_KEY}&hash=${this.HASH}`;\n\n  // constructor;tipo;nombre_variable;componente_a_llamar\n  constructor(private http: HttpClient) { }\n\n  // creaamos un Metodo llamado getAllCharacters lo declaramoscomo un observable tipo any\n  // despues le pedimosque retorne URL_API que seria la diredccion de la api de marvel\n  // finaliza con la invocacion del metodo pipe y un map que son los qe traen la data\n  getAllCharacters(): Observable<any>{\n    return this.http.get<any>(this.URL_API)\n    .pipe(map((data: any) => data.data.results));\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CharactersComponent } from './characters/characters.component';\n\n\n\n\nconst routes: Routes = [\n  {\n  path:'', redirectTo: '/characters', pathMatch: 'full'\n  },\n  {\n    path:'characters', component: CharactersComponent\n  }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}